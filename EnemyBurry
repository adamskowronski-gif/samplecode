using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class EnemyBurry : EnemyBaseCode
{
    public Transform[] path;
    public int currentPoint;
    public Transform currentGoal;
    public float roundingDistance;
    public Rigidbody2D myRigidbody;
    public BoxCollider2D boxcoll;
    public BoxCollider2D hitboxcol;

    public bool nextpath;

    public GameObject bullet;



    public GameObject BulletspawnUp;
    public GameObject BulletspawnDown;
    public GameObject BulletspawnLeft;
    public GameObject BulletspawnRight;
    public GameObject BulletspawnUpRight;
    public GameObject BulletspawnDownRight;
    public GameObject BulletspawnUpLeft;
    public GameObject BulletspawnDownLeft;



    void Update()
    {
        

        CheckDistance();
    }

    public void CheckDistance()
    {
      

        if (Vector3.Distance(transform.position,
            path[currentPoint].position) > roundingDistance && nextpath == false)
        {
            Debug.Log("path1");
            anim.SetBool("moving", true);
            anim.SetBool("digup", false);
            anim.SetBool("stay", false);
            anim.SetBool("digdown", false);
            Vector3 temp = Vector3.MoveTowards(transform.position,
                path[currentPoint].position,
                speed * Time.deltaTime);


            myRigidbody.MovePosition(temp);
     
        }
        else if (Vector3.Distance(transform.position,
            path[currentPoint].position) <= roundingDistance && nextpath == false)
        {


            Debug.Log("path2");
            StartCoroutine(ChangeGoal());            
        }


    }
 IEnumerator ChangeGoal()
    {
      
        nextpath = true;
        anim.SetBool("moving", false);
        anim.SetBool("digup", true);
        anim.SetBool("stay", false);
        anim.SetBool("digdown", false);
        boxcoll.enabled = true;
        yield return new WaitForSeconds(.5f);
        hitboxcol.enabled = true;
        anim.SetBool("moving", false);
        anim.SetBool("digup", false);
        anim.SetBool("stay", true);
        anim.SetBool("digdown", false);
        yield return new WaitForSeconds(2f);
        EnemyShoot();
        yield return new WaitForSeconds(2f);
        anim.SetBool("moving", false);
        anim.SetBool("digup", false);
        anim.SetBool("stay", false);
        anim.SetBool("digdown", true);
        hitboxcol.enabled = false;
        yield return new WaitForSeconds(.5f);
        if (currentPoint == path.Length - 1)
        {
            currentPoint = 0;
            currentGoal = path[0];
        }
        else
        {
            currentPoint++;
            currentGoal = path[currentPoint];
        }
        
        boxcoll.enabled = false;
        
        nextpath = false;
        anim.SetBool("moving", true);
        anim.SetBool("digup", false);
        anim.SetBool("stay", false);
        anim.SetBool("digdown", false);

    }



    void EnemyShoot()
    {
        Instantiate(bullet, BulletspawnUp.transform.position, BulletspawnUp.transform.rotation);
        Instantiate(bullet, BulletspawnDown.transform.position, BulletspawnDown.transform.rotation);
        Instantiate(bullet, BulletspawnRight.transform.position, BulletspawnRight.transform.rotation);
        Instantiate(bullet, BulletspawnLeft.transform.position, BulletspawnLeft.transform.rotation);
        Instantiate(bullet, BulletspawnUpLeft.transform.position, BulletspawnUpLeft.transform.rotation);
        Instantiate(bullet, BulletspawnUpRight.transform.position, BulletspawnUpRight.transform.rotation);
        Instantiate(bullet, BulletspawnDownRight.transform.position, BulletspawnDownRight.transform.rotation);
        Instantiate(bullet, BulletspawnDownLeft.transform.position, BulletspawnDownLeft.transform.rotation);
        
    }

}

