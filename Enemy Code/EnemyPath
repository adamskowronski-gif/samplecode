using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class EnemyPath : EnemyBaseCode
{
    public Transform[] path;
    public int currentPoint;
   public Transform currentGoal;
    public float roundingDistance;

    public float speed;

   public override void Start()
    {
        myRigidbody = GetComponent<Rigidbody2D>();
        anim = this.gameObject.GetComponent<Animator>();

    }

    void Update()
    {
        CheckDistance();
    }

    public  void CheckDistance()
    {
       
            if (Vector3.Distance(transform.position,
                path[currentPoint].position) > roundingDistance)
            {
          
                Vector3 temp = Vector3.MoveTowards(transform.position,
                    path[currentPoint].position,
                    speed * Time.deltaTime);

            
                myRigidbody.MovePosition(temp);
            }
            else
            {
          
                ChangeGoal();
            }
        

    }
    private void ChangeGoal()
    {
        if (currentPoint == path.Length - 1)
        {
            currentPoint = 0;
            currentGoal = path[0];
        }
        else
        {
            currentPoint++;
            currentGoal = path[currentPoint];
        }

    }



}
